sudo loadkeys us

cd /home/vagrant

# cd /usr/share/
#wget https://download.fedoraproject.org/pub/fedora/linux/releases/25/Everything/source/tree/Packages/t/tomcat-8.0.36-2.fc25.src.rpm
#wget http://dl.fedoraproject.org/pub/fedora/linux/releases/25/Everything/i386/os/Packages/t/tomcat-webapps-8.0.36-2.fc25.noarch.rpm
#wget http://dl.fedoraproject.org/pub/fedora/linux/releases/25/Everything/i386/os/Packages/t/tomcat-lib-8.0.36-2.fc25.noarch.rpm
#wget http://dl.fedoraproject.org/pub/fedora/linux/releases/25/Everything/i386/os/Packages/t/tomcat-el-3.0-api-8.0.36-2.fc25.noarch.rpm
#wget http://dl.fedoraproject.org/pub/fedora/linux/releases/25/Everything/i386/os/Packages/t/tomcat-jsp-2.3-api-8.0.36-2.fc25.noarch.rpm
#wget http://dl.fedoraproject.org/pub/fedora/linux/releases/25/Everything/i386/os/Packages/t/tomcat-servlet-3.1-api-8.0.36-2.fc25.noarch.rpm
#sudo dnf install -y tomcat-servlet-3.1-api-8.0.36-2.fc25.noarch.rpm tomcat-jsp-2.3-api-8.0.36-2.fc25.noarch.rpm tomcat-el-3.0-api-8.0.36-2.fc25.noarch.rpm tomcat-lib-8.0.36-2.fc25.noarch.rpm tomcat-8.0.36-2.fc25.src.rpm tomcat-webapps-8.0.36-2.fc25.noarch.rpm
wget https://rpmfind.net/linux/mageia/distrib/4/x86_64/media/core/updates/tomcat-7.0.54-1.1.mga4.noarch.rpm
wget https://rpmfind.net/linux/mageia/distrib/4/x86_64/media/core/updates/tomcat-lib-7.0.54-1.1.mga4.noarch.rpm
wget https://rpmfind.net/linux/mageia/distrib/4/x86_64/media/core/updates/tomcat-jsp-2.2-api-7.0.54-1.1.mga4.noarch.rpm
wget https://rpmfind.net/linux/mageia/distrib/4/x86_64/media/core/updates/tomcat-servlet-3.0-api-7.0.54-1.1.mga4.noarch.rpm
wget https://rpmfind.net/linux/mageia/distrib/4/x86_64/media/core/updates/tomcat-el-2.2-api-7.0.54-1.1.mga4.noarch.rpm
sudo dnf install -y tomcat-servlet-3.0-api-7.0.54-1.1.mga4.noarch.rpm tomcat-el-2.2-api-7.0.54-1.1.mga4.noarch.rpm
sudo dnf install -y tomcat-jsp-2.2-api-7.0.54-1.1.mga4.noarch.rpm
sudo dnf install -y tomcat-lib-7.0.54-1.1.mga4.noarch.rpm tomcat-7.0.54-1.1.mga4.noarch.rpm


sudo systemctl enable tomcat
sudo systemctl start tomcat


# remove the tomcat.pid file to let it be created again by tomcat.conf 
sudo rm /var/run/tomcat.pid

# adding user vagrant to tomcat group so that it will have writable permission to tomcat.conf


sed -i -e '/format=/s/=.*/=spade_json/' /etc/camflowd.ini
sudo systemctl restart camflowd

sudo camflow --duplicate true
# start tracking target file
sudo camflow -a true

sudo cp /vagrant/provision/spade.config /home/vagrant/SPADE/cfg/spade.client.Control.config
sudo /home/vagrant/SPADE/bin/spade start

sudo usermod -a -G tomcat vagrant

sudo su vagrant -c /vagrant/provision/inject-code.sh

# sleep 20

# sudo cp /tmp/audit.log /vagrant/prov-data/before-run-tomcat-conf-after-inject.log

# simulate how the system on boot, other services, cronjobs, startup scripts trigger the run of the target file


# sleep 20

# sudo cp /tmp/audit.log /vagrant/prov-data/before-exploit-after-run-tomcat-conf.log

# sudo /sbin/shutdown -r now

